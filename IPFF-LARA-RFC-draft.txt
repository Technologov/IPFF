

                                                              A.Eromenko
Category: Proposed Standard
                                                           December 2015
RFC (draft)


                    Link Address Resolution Algorithm
                   for Internet Protocol "Five Fields"
                  =====================================
                           Specification Draft

Abstract

   This document describes how-to correlate between IEEE 802.3 Ethernet
   addresses and Internet Protocol "Five Fields" (IP-FF) addresses,
   including unicasts, multicasts and duplicate address detection 
   mechanism, and the procedure to boot-up IPFF stack on Ethernet links.



Table of Contents

   1. Introduction
   2. Generating Logical MAC addresses
   3. Duplicate Address Detection: FastDAD and PowerDAD
   3.1. Fast Duplicate Address Detection Example
   3.1.1. FastDAD request example
   3.1.2. FastDAD reply example
   3.2. SleepyDAD - Passive Duplicate Address Detection
   4. Limitation: What we do not detect ?
   5. Booting IPFF stack
   5.1. Broadcast Advertisement
   6. Dual-Stack operation hints
   7. Private MAC addresses
   8. Mapping of Multicast addresses
   9. Theoretical Efficiency vs ARP/NDP
   Authors' Contacts




1. Introduction

   This document describes specification for a resolution between IPFF
   addresses and IEEE 802.3 Ethernet addresses, as well as a Duplicate 
   Address Detection protocol. Other data-link layers may require 
   separate specifications.

   Minimum Prefix:
   The minimum prefix on Ethernet interfaces is /10.

   On Ethernet, instead of resolving a logical IP address to a physical
   MAC address, we simply generate our own logical MAC addresses as a 
   one-way function from logical IP addresses.

   This "trick" can be done because physical MAC addresses are actually
   stored in RAM or a re-writable register in the Ethernet controller 
   driver, and therefore changeable (until the next reboot).



2. Generating Logical MAC addresses

   One-way function to generate MAC address is to put last 40-bits 
   (four fields) of an IPFF address into a logical MAC container, 
   beginning with   0A:xx:xx: xx:xx:xx

   So let's take an IP address like this:
         382.201.769.25.133

   IP:
   2nd Field    - 3rd Field    - 4th field    - 5th field
   00 1100 1001 - 11 0000 0001 - 00 0001 1001 - 00 1000 0101

   Logical MAC address:
   2nd Octet - 3rd Octet - 4th Octet - 5th Octet - 6th Octet

   0011 0010 - 0111 0000 - 0001 0000 - 0110 0100 - 1000 0101 (binary)
   0x 32     - 0x 70     - 0x 10     - 0x 64     - 0x 85     (hexa)

   So our final logical MAC address will look like:
   0A:32:70:10:64:85

   This is a one-way function. You can convert any IPFF address to
   a logical MAC, but not the other way around, which is why minimal
   IP prefix is /10.



3. Duplicate Address Detection: FastDAD and PowerDAD

   Fast Duplicate Address Detection (FastDAD) means by Unicast frames.
   A Power Duplicate Address Detection (PowerDAD) uses the same, but 
   with broadcast Layer 2 destination MAC address.
   If a request comes with broadcast layer 2 address, so will reply.

   This technique somewhat similar to Gratuitous ARP, but not exactly.

ICMP packet:

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  4|     Type                      |          Checksum             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  8|     Reserved                  |                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +
 12|                      Source MAC address                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 16|                       IPFF Session ID                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
(bytes)

   IP Fields:
   
   HTL = 1 (Hops-to-Live)
   Source IP Address = Destination IP Address

   ICMP Fields:

   Type: (16-bit)
     (proposed values; to be assigned by IANA)

   16 = DAD request
   17 = DAD reply

   Reserved (16-bit)           - Initialized to zero on transmission;
                                 ignored by receiver.

   Source MAC address (48-bit) - of the computer sending this packet.

   IPFF Session ID (32-bit)    - an additional unique identifier to 
                                 detect duplicate MAC addresses.
                                 Randomly generated value during init.
                                 Does not change until stack reboot.
                                 Unique per host/VRF, not per interface.



3.1. Fast Duplicate Address Detection Example

3.1.1. FastDAD request example

   Assume PC-"A" has a MAC address: B8:6B:23:7B:C3:79
   Assume PC-"B" has a MAC address: B8:6B:23:7B:C3:80

   Ethernet layer:
   dst.MAC: 0A:32:70:10:64:85 (Unicast to Logical MAC of target IP;)
                               Derieved from 382.201.769.25.133 earlier.
   src.MAC: B8:6B:23:7B:C3:79 (physical MAC of PC-"A")

   IP layer:
   src.IP: 382.201.769.25.133 (same as destination)
   dst.IP: 382.201.769.25.133
   HTL = 1,    ToS = 0,   Protocol = 1 (ICMP)

   ICMP layer:
   Type: 16 = DAD request
   IP5 session ID= AAA
   src.MAC: B8:6B:23:7B:C3:79 (same as on Ethernet layer)

3.1.2. FastDAD reply example

   Ethernet layer:
   dst.MAC: B8:6B:23:7B:C3:79 (physical MAC of PC-"A")
   src.MAC: B8:6B:23:7B:C3:80 (physical MAC of PC-"B")
   IP layer:
   src.IP: 382.201.769.25.133 (same as destination)
   dst.IP: 382.201.769.25.133
   ICMP layer:
   Type: 17 = DAD reply
   IP5 session ID= BBB
   src.MAC: B8:6B:23:7B:C3:80 (same as in Ethernet layer)

   Duplicate IP detected !
   (no reply = all good)

3.1.3. Bonus: Duplicate MAC address detection

   This scenario can be a result from careless clone-deployment of
   virtual machines.

   If receiving station has the same physical MAC as received DAD 
   request, we compare IPFF session ID. If it is different, we send 
   a reply:

   FDAD reply #2
   Ethernet layer:
   dst.MAC: FF:FF:FF:FF:FF:FF (reply sent to Layer 2 broadcast,
                               to make sure it traverses ALL switches)
   src.MAC: B8:6B:23:7B:C3:79 (physical MAC of PC-"C" & "A")

   IP layer:
   src.IP: 382.201.769.25.133 (same as destination)
   dst.IP: 382.201.769.25.133
   HTL = 1,    ToS = 0,   Protocol = 1 (ICMP)

   ICMP layer:
   Type: 17 = DAD reply
   IP5 session ID= CCC
   src.MAC: B8:6B:23:7B:C3:79  (same as on Ethernet layer)    

   Duplicate IP & physical MAC detected !
   (no reply = all good)



3.2. SleepyDAD - Passive Duplicate Address Detection

   In addition to active probing, passive probing should take place 
   with hints from various protocols, such as TCP and ICMP.

   If a node get multiple packets destined to it, to its logical MAC 
   address, and its IP address, but not originated from it,
   it is a negative hint of a potential duplicate address.
   It should start the procedure of PowerDAD.



4. Limitation: What we do not detect ?

   If there is a duplicate (logical or physical) MAC address,
   not running IPFF it will go undetected by this algorithm.

   One idea to address this limitation, is to run IPv4 ARP
   listener as well as IPv6 Neighbor Discovery Advertisement listener,
   in parallel to IPFF, in Multi-stack operation.
   But Multi-stack listener is outside the scope of this spec.

   Additionally, if after IPFF stack is up-n-running, two broadcast 
   domains with duplicate addresses were subsequently joined,
    we can't detect it in real-time.

   Duplicate physical MAC but different IP.
   NOTE: We do not care, since IPFF uses logical MAC addresses for 
   traffic. We do not detect this scenario.



5. Booting IPFF stack

   When booting an IPFF stack, it must be put into "tentative mode",
   until DAD procedure is complete.
   Additionally, IPFF stack must Randomly-generate an IPFF Session ID,
    and "remember" it during an entire session,
    as well as its "physical MAC address", to answer DAD requests.

   Changing an IP address, either statically, via DHCP,
   or otherwise requires a new DAD procedure.
   Changing link up/down state also requires a new DAD procedure.

   It is recommended to periodically restart DAD procedure,
   say once every 120-240 minutes. Configurable by OS vendor.
   This partially solves the 2nd limitation.

   What to do when there is a duplicate address ?

   If a duplicate address detected during IPFF stack bootup,
   it must be shutdown, and error reported to the user.
   (via log, GUI dialog, console, SNMP, syslog, or otherwise)

   If a duplicate address detected after IPFF stack bootup,
   it must be kept running, and error reported to the user.



5.1. Broadcast Advertisement

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  4|     Type                      |          Checksum             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

  Type:

  18 = Broadcast advertisement. (will be assigned by IANA)

  If a node has re-connected to a broadcast network (like Ethernet),
  using the same IP subnet, it MAY send a broadcast advertising
  itself. This will force all Ethernet switches to learn it's logical
  MAC address, in case it has moved to a different segment (collision 
  domain), so that all nodes can reach it. 
  This is not needed on cold-boot devices.

  Source MAC = (logical MAC, derived from IP)
  Destination MAC = FF:FF:FF:FF:FF:FF (broadcast)

  Source IP (node's IP address)
  Destination IP = 0.0.0.0.0 (unspecified, since this command is 
     directed at Ethernet switches, rather than hosts)



6. Dual-Stack operation hints

   For working with both IPFF and IPv4/v6, the operating system
   may either use "promiscuous mode" of an Ethernet controller,
   to listen to multiple unicast MAC addresses, or move
   IPv4/v6 to a new logical MAC address, used by IPFF.

   If an Ethernet controller supports "standard mode" listening
   to multiple unicast MAC addresses, it should be chosen.



7. Private MAC addresses

   According to various sources on the Internet, the
   following MAC address ranges are considered private.
   Also known as "Locally Administered Address Ranges":

   x2-xx-xx-xx-xx-xx
   x6-xx-xx-xx-xx-xx
   xA-xx-xx-xx-xx-xx
   xE-xx-xx-xx-xx-xx


8. Mapping of Multicast addresses

   Multicasts in IPFF begin with 99.9.x.x.x/20

   Multicast MAC addresses must have first octet number odd.

   MAC addresses in IPFF will get 55:55:xx:xx:xx:xx (32 bits for nodes)
   So those 30 bits will be mapped directly, and first 20 bites
   ignored. This is called a "Link Multicast Group"; LMG for short.

   Example:

   99.9.0.0.1 (DHCP clients; our "Silent Multicast Listeners") -- 
   all will get a "Link Multicast Group" MAC address of:

   55:55:00:00:00:01

   Because IGMP advertisement is not used for "Silent listeners",
   smart switches cannot do IGMP snooping, and will have to flood 
   such packets on all ports, like broadcast.

   But a node's Ethernet controller, in "standard mode", can filter
   unnecessary traffic, without interrupting the CPU, gaining 
   efficiency.

9. Theoretical Efficiency vs ARP/NDP

   While typically ARP or NDP may require (O)*O amount of requests to 
   fill a mesh network, in case of LARA, it is just (O).

   O = amount of Objects. (nodes)

   And the packets sent are due to DAD algorithm, not discovery per-se.

Authors' Contacts

   Alexey Eromenko
   Israel

   Skype: Fenix_NBK_
   EMail: al4321@gmail.com
